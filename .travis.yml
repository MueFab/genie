language: cpp

# Notes on GCC:
# - GCC support for ISO C11 reached a similar level of completeness as
#   ISO C99 in 4.9 and that C++11 is feature-complete in 4.8.1, but support
#   for <regex> does not exist until 4.9.
# - Ubuntu 12.04 ships with GCC 4.6.3 and Ubuntu 14.04 ships with GCC 4.8.2.
# - On macOS, gcc is an alias for clang, and g++ is an alias for clang++.
#   So we must set CC and CXX to specific gcc/g++ versions.

# Define the build matrix explicitly. Manually expanding the combinations
# of (os, compiler) is more tedious, but grants far more flexibility.
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
    - os: osx
      compiler: clang

before_install:
  - eval "${MATRIX_EVAL}"

before_script:

script:
  - ./ci/cmake-build.sh
  - ./ci/test-genie-roundtrip.sh
  - ./ci/test-gabac-roundtrips.sh

#after_success:
  # Create lcov report
  # capture coverage info
#  - lcov --directory . --capture --output-file coverage.info
  # filter out system and extra files.
  # To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
#  - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
  # output coverage data for debugging (optional)
#  - lcov --list coverage.info
  # Uploading to CodeCov with TOKEN
#  - export CODECOV_TOKEN="7d8ec23c-382b-4b43-a528-210eeb893776"
  # '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
#  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"